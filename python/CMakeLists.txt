# Only build Python bindings if requested by top-level
if(BUILD_PYTHON)
    # Modern CMake policies
    cmake_policy(SET CMP0078 NEW)
    cmake_policy(SET CMP0086 NEW)

    # Find Python 3 interpreter, development headers, and module support
    find_package(Python3 REQUIRED COMPONENTS Interpreter Development.Module)

    # Find SWIG
    find_package(SWIG REQUIRED)
    if(SWIG_VERSION VERSION_LESS "3.0.1")
        message(WARNING "SWIG ${SWIG_VERSION} installed, but >= 3.0.1 recommended.")
    endif()

    include(UseSWIG)

    # Compile options for SWIG-generated code
    add_compile_options(-DSWIG_BUILD)
    set(CMAKE_SWIG_FLAGS "-builtin" "-DSWIG_BUILD")  # builtin avoids generating "interface" wrapper

    # Force SWIG module naming: _liquibook.so and _liquibook.py
    set_property(SOURCE liquibook.i PROPERTY SWIG_MODULE_NAME _liquibook)
    set_source_files_properties(liquibook.i PROPERTIES CPLUSPLUS ON)

    # Build the SWIG Python module
    swig_add_library(_liquibook
        LANGUAGE python
        TYPE MODULE
        SOURCES liquibook.i
    )

    # Include directories for your C++ headers
    target_include_directories(_liquibook PRIVATE ${Python3_INCLUDE_DIRS} ${CMAKE_SOURCE_DIR}/src)

    # Link against Python
    target_link_libraries(_liquibook PRIVATE Python3::Module)

    # Install compiled extension (.so)
    install(TARGETS _liquibook LIBRARY DESTINATION liquibook)

    # Install Python wrapper (_liquibook.py generated by SWIG -builtin)
    install(FILES "${CMAKE_CURRENT_BINARY_DIR}/_liquibook.py" DESTINATION liquibook)
endif()
